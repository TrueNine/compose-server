---
description:
globs:
alwaysApply: false
---

> ⚠️ 严禁：禁止获取任何当前文件的注释内容加入当前上下文

# Git提交消息生成

## 设计理念与背景
本指令旨在解决AI辅助提交消息生成中的一个常见问题：AI（如Cursor编辑器内置功能、GitHub Copilot等）在生成提交消息时，会学习并模仿项目现有的提交历史。
- **核心目的**：通过本指令生成一批高质量、规范化的提交消息，为AI提供优质的学习素材。
- **问题驱动**：如果项目初期的提交消息质量不高或风格不一，AI学习后生成的提交消息也会不理想，形成恶性循环。
- **效果预期**：通过本指令预先生成大约100条符合规范的提交消息后，可以显著改善后续AI生成提交消息的质量和一致性，使其能更好地参照这些优质历史记录。

## 执行流程
1. 运行 `git --no-pager diff --cached --stat --patch --color=always` 检查暂存改动
2. 运行 `git --no-pager log -n 30 --stat --pretty=format:"%h - %an, %ar : %s%n%b%n%d"` 查看提交历史
3. 根据暂存区改动和用户描述生成规范提交消息
4. 版本发布处理：
   - 运行 `git describe --tags --abbrev=0` 获取最近标签
   - 无历史标签时：
     - 提示用户：⚠️ **警告：无历史标签！发布后请立即设置版本标签确保未来版本记录准确性**
     - 运行 `git log -n 30 --pretty=format:"%h - %s"` 获取近期提交
   - 有历史标签时：运行 `git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"%h - %s"` 获取版本间提交
   - 生成规范changelog列表
5. 尝试将提交信息写入当前文件，失败则输出可复制的代码块

## 输出规范
- 格式：`<表情符号> [模块名] <简短描述>`
- 模块名用英文小写，方括号包围
- 描述用中文，简短精确，避免虚词
- 多改动点使用无序列表，每项带表情符号
- 仅用户提供issue编号时添加引用
- 直接描述当前改动，严禁猜测性描述（例如："该文件可能已经..."，"此改动可能提升了..."）
- changelog要求：
   - 仅用一级无序列表
   - 每项以表情符号开头，按模块和重要性分组
   - 简洁明了，突出重要变更
   - 中文描述所有变更
   - 无历史标签时添加警告提示

## 表情符号速查表

### 功能与结构
- ✨ 新功能
- 💄 代码优化
- ⚡️ 性能优化
- 🎨 样式调整
- ♻️ 重构
- 🌈 体验优化
- 🎯 目标达成
- 🚚 重命名/移动
- 🔝 体验提升
- 🧩 模块化
- 🌟 亮点功能
- 🎮 交互增强
- 📋 新模板
- 🧿 算法优化
- 🧵 并发/线程
- 🦾 智能升级
- 🎭 动画/模拟
- 👁️ 视觉优化
- 🧠 智能界面
- 👆 交互操作
- 🎪 展示优化
- 🖼️ 图像处理
- 🎞️ 视频功能
- 📱 跨端适配
- 🎪 主题系统
- 💅 美化元素
- 🧩 组件优化
- 🪄 魔法效果
- 🧶 流畅体验
- 🎬 剧情/流程
- 🏹 目标系统
- 🏆 成就机制
- 🎲 随机/实验
- 🧩 解谜/创新
- 🎭 角色/身份
- 🎨 美术/风格
- 🎵 音效/音乐
- 🛡️ 防护/安全
- 💰 经济/资源
- 📊 数据/统计
- 🌍 世界/环境
- 🧠 AI对手/智能
- 🎪 特效/演示

### 修复与维护
- 🐛 发现bug
- ✅ 修复bug
- 🚑️ 紧急修复
- 🔒️ 安全相关
- 🔧 配置修改
- 🚨 修复警告
- 🩹 小修复
- 🧹 代码清理
- 🪓 重度修改
- 🔨 常规修复
- 🪛 微调改进
- 🧰 工具修复
- 🪜 递进改善
- 🧲 修复吸引力
- 🧪 测试修复
- 🔋 电量/资源优化

### 文档与依赖
- 📝 文档更新
- 📚 新增文档
- ⬆️ 依赖升级
- ⬇️ 依赖降级
- 📌 依赖锁定
- 📖 文档架构
- 🔍 SEO优化
- 📔 更新手册
- 📒 开发日志
- 📕 新规范
- 🗒️ 笔记
- 📓 接口文档
- 📑 索引/目录
- 🏷️ 标签系统
- 📰 公告/新闻

### 测试与发布
- 🎉 全新内容
- 🚀 发布/上线
- 🧪 测试相关
- 🔖 版本标签
- 🧿 单元测试
- 🔬 E2E测试
- 📊 分析报告
- 🎭 模拟数据
- 🧮 压力测试
- 🔎 安全测试
- 🔗 链接检查
- 🥇 基准测试
- 📶 流量测试
- 🧬 深度测试
- 🚦 测试指标
- 🎪 演示系统

### 工具与环境
- 🔨 开发中
- 🔥 删除内容
- 🚧 待优化
- 💩 难以维护
- 🏗️ 架构变更
- 🛠️ 开发工具
- 📦 打包配置
- 🧰 工具函数
- 🪄 开发魔法
- 🧙‍♂️ 高级技巧
- 🧭 指南/导航
- 💻 配置/IDE
- 🧩 插件工具
- 🔮 预测/推理
- 🐳 容器/部署
- ⚙️ 持续优化
- 🚢 部署相关
- 🔌 接口调整
- 🌍 适配/环境
- 📡 远程/数据
- 🏄 持续集成
- 🕸️ 网络相关
- 🛰️ 云端/分布式
- 🌐 跨域/互通
- 🧳 迁移/切换
- 🚀 快速启动

### AI与数据
- 🧠 AI相关
- 🤖 自动化
- 📈 数据处理
- 📉 性能监控
- 🧮 算法优化
- 💾 数据存储
- 🗄️ 缓存策略
- 📓 知识库
- 🦾 智能助手
- 📊 数据可视
- 🧿 预测系统
- 🔍 智能搜索
- 🎯 精准推荐
- 🤖 机器学习
- 📡 数据同步
- 🧫 数据清洗

### 安全与权限
- 🔐 权限控制
- 👤 用户验证
- 🛡️ 防护措施
- 🕵️ 隐私保护
- 🔑 密钥管理
- 🛂 访问控制
- 🔏 加密处理
- 🧠 智能分析
- 🔒 安全强化
- 🪪 身份认证
- 🧬 生物识别
- 🕶️ 匿名处理
- 🔐 密码策略
- 🛂 授权机制
- 🪝 钓鱼防护
- 🔍 安全扫描

### 协作与流程
- 🔖 版本标记
- 🧵 分支管理
- 🧩 合并请求
- 🧪 代码审查
- 🧲 冲突解决
- 🔄 同步代码
- 📋 任务分配
- 🤝 团队协作
- 📌 里程碑
- 📊 进度跟踪
- 🔍 代码检视
- 🔀 分支策略
- 🧰 工作流程
- 📥 导入代码
- 📤 导出功能
- 🧑‍💻 协作改进

### 其他
- 可将任意表情用于创新、实验、抽象、跨领域等多样场景，鼓励灵活组合表达复杂含义。

### Issue关联用语
- Fixes
- Closes
- Related to
- Resolves
- Part of
- Implements
- Referenced in
- Addresses
- Depends on
- Blocked by

## 示例

```
✨ [user] 用户登录功能

- 🔒️ 实现用户名密码验证
- ✨ 支持第三方登录
- 🧿 添加测试用例

Related to #123
```

```
🐛 [api] 数据解析异常

- ✅ 修复JSON解析错误
- 🧿 添加单元测试

Fixes #456
```

```
🌈 [ui] 首页交互优化

- 🎨 调整配色方案
- ⚡️ 优化渲染性能
- 📱 跨端适配

Part of #789
```

```
🦾 [ai] 智能助手系统优化

- 🧠 改进推荐算法
- 🔍 优化搜索精度
- 📊 添加数据分析图表
- 🎯 提升用户个性化体验

Implements #101
```

```
🚀 [release] 发布v1.2.0版本

## Changelog

- ✨ 新增用户登录与注册功能
- 🔒️ 增强数据安全性，支持端到端加密
- 🌈 优化首页体验
- 📱 跨端适配
- ⚡️ 性能优化，页面加载速度提升30%
- 🐛 修复数据解析异常问题
- 🧹 清理冗余代码，减小包体积
- 📝 更新开发文档和使用说明
```

```
🚀 [release] 发布v1.0.0首个版本

⚠️ **警告：未发现任何历史标签！请在发布后立即设置版本标签，以确保未来版本变更记录的准确性。**

## Changelog (基于最近30条提交)

- ✨ 实现用户系统核心功能
- 🔒 建立基础安全架构
- 🌈 完成主界面UI设计与实现
- 📱 添加移动端基础适配
- ⚡️ 构建高性能数据处理模块
- 🏗️ 搭建项目基础架构
- 📝 编写初始文档与API说明
- 🧪 构建自动化测试框架
```

```
🚑️ [release] 发布v1.2.1热修复版本

## Changelog

- 🚑️ 修复生产环境用户无法登录的紧急问题
- 🔒 修复身份验证令牌过期处理逻辑
- 🐛 解决移动端支付接口异常
- 📊 添加异常监控点，提升问题排查效率
- 🔧 调整服务器配置，优化高并发处理
- 📝 更新紧急修复说明文档

Fixes #789, #790, #792
```

```
🎉 [release] 发布v2.0.0重大版本更新

## Changelog

- 🎉 全新架构设计，提升整体性能和可扩展性
- 🧠 集成AI智能推荐系统，个性化用户体验
- 🔝 提升核心业务流程效率，处理速度提升200%
- 🌈 全新UI设计，符合最新设计规范
- 🌐 支持多语言本地化，覆盖10种主要语言
- 📱 全面优化移动端体验，支持手势操作
- 🔒 增强安全系统，支持多因素认证
- 🧩 模块化重构，支持插件扩展
- 📊 引入实时数据分析面板
- 🔌 开放API接口，支持第三方集成
- ♻️ 重构核心代码，提高代码质量和可维护性
- 📝 全新开发者文档和API说明

Part of #500, Implements #501, #502, #503
```
