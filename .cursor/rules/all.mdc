---
description:
globs:
alwaysApply: true
---

# 技术选型

- 代码必须可在主流平台和环境中运行
- 必须选择编译型强类型语言
- 必须使用静态类型检查工具

# 全局要求

- 任何时候，需优先查看当前开发环境配置，决定 agent 执行方式
- 生成代码时，必须参考生产环境规则描述的因素
- 生成、优化或重构代码时，需先查阅优化技巧、优化指南等相关规则
- 生成单元测试时，需先查阅测试相关规则

# 性能优化

- 禁止不必要的内存分配和复制
- 生成、优化或重构代码时需先查看优化技巧以及优化指南等相关规则
- 必须关注响应时间、内存占用、启动时间、执行性能及复杂度，合理控制资源开销

# 代码规范

- 所有代码必须通过静态类型检查
- 必须优先使用编译期检查替代运行时检查
- 必须显式声明所有外部依赖关系
- 禁止使用动态特性和反射机制
- 必须最小化第三方依赖
- 必须统一代码风格
- 禁止行尾注释
- 禁止注释无用代码，发现必须删除

# 文档与可维护性

- 所有公开接口和复杂逻辑必须有注释
- 代码结构必须清晰，便于维护和扩展

# 安全性

- 禁止硬编码敏感信息，必须使用安全存储方案

# 错误处理

- 必须使用类型系统捕获潜在错误
- 必须在编译期处理和检查异常情况
- 必须记录完整的错误上下文信息

# 测试验证

- 核心功能必须有单元测试覆盖
- 必须验证所有公开接口的边界条件
- 生成单元测试时，必须需先查看测试相关规则
