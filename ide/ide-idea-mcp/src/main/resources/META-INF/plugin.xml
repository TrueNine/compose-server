<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
  <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
  <id>io.github.truenine.composeserver.ide.ideamcp</id>

  <!-- Public plugin name should be written in Title Case.
       Guidelines: https://plugins.jetbrains.com/docs/marketplace/best-practices-for-listing.html#plugin-name -->
  <name>Compose Server MCP</name>

  <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
  <vendor url="https://github.com/TrueNine">Yan100Team</vendor>

  <!-- Product and plugin compatibility requirements.
       Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
  <depends>com.intellij.modules.platform</depends>

  <depends>com.intellij.mcpServer</depends>

  <!-- MCP Server extensions -->
  <extensions defaultExtensionNs="com.intellij.mcpServer">
    <mcpTool implementation="io.github.truenine.composeserver.ide.ideamcp.tools.TerminalTool"/>
    <mcpTool implementation="io.github.truenine.composeserver.ide.ideamcp.tools.ViewErrorTool"/>
    <mcpTool implementation="io.github.truenine.composeserver.ide.ideamcp.tools.CleanCodeTool"/>
    <mcpTool implementation="io.github.truenine.composeserver.ide.ideamcp.tools.ViewLibCodeTool"/>
    <mcpTool implementation="io.github.truenine.composeserver.ide.ideamcp.ComposeServerMcpPlugin"/>
  </extensions>

  <!-- Extension points defined by the plugin.
       Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
  <extensions defaultExtensionNs="com.intellij">
    <!-- MCP 调试工具窗口 -->
    <toolWindow
      id="McpDebug"
      displayName="MCP Debug"
      icon="/META-INF/pluginIcon.svg"
      anchor="bottom"
      factoryClass="io.github.truenine.composeserver.ide.ideamcp.McpDebugToolWindowFactory"/>

    <!-- 服务注册 -->
    <projectService
      serviceInterface="io.github.truenine.composeserver.ide.ideamcp.services.ErrorService"
      serviceImplementation="io.github.truenine.composeserver.ide.ideamcp.services.ErrorServiceImpl"/>
    <projectService
      serviceInterface="io.github.truenine.composeserver.ide.ideamcp.services.CleanService"
      serviceImplementation="io.github.truenine.composeserver.ide.ideamcp.services.CleanServiceImpl"/>
    <projectService
      serviceInterface="io.github.truenine.composeserver.ide.ideamcp.services.LibCodeService"
      serviceImplementation="io.github.truenine.composeserver.ide.ideamcp.services.LibCodeServiceImpl"/>
    <projectService
      serviceImplementation="io.github.truenine.composeserver.ide.ideamcp.services.FileManager"/>
    
    <!-- 终端输出拦截器服务 -->
    <projectService
      serviceImplementation="io.github.truenine.composeserver.ide.ideamcp.TerminalOutputInterceptor"/>

    <!-- 错误捕获过滤器 - 用于捕获所有语法错误 -->
    <highlightErrorFilter
      implementation="io.github.truenine.composeserver.ide.ideamcp.services.ErrorCaptureFilter"/>
  </extensions>

  <!-- 右键菜单动作 -->
  <actions>
    <group id="McpActions" text="MCP 操作" popup="true">
      <action id="CleanCode"
              class="io.github.truenine.composeserver.ide.ideamcp.actions.CleanCodeAction"
              text="清理代码"
              description="使用 IDEA 功能清理和格式化代码"/>
      <action id="ViewError"
              class="io.github.truenine.composeserver.ide.ideamcp.actions.ViewErrorAction"
              text="查看错误"
              description="查看文件或文件夹中的错误、警告信息"/>
      <action id="ViewLibCode"
              class="io.github.truenine.composeserver.ide.ideamcp.actions.ViewLibCodeAction"
              text="查看库代码"
              description="查看第三方库的源代码或反编译代码"/>

      <!-- 添加到编辑器右键菜单 -->
      <add-to-group group-id="EditorPopupMenu" anchor="last"/>
      <!-- 添加到项目树右键菜单 -->
      <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
    </group>
  </actions>
</idea-plugin>
