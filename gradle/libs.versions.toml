[versions]
ch-qos-logback = "1.5.20"
cn-dev33-sa-token = "1.44.0"
cn-hutool = "5.8.41"
com-alibaba-cloud = "2023.0.3.3"
com-baomidou-mybatis-plus = "3.5.14"
com-diffplug-spotless = "8.0.0"
com-fasterxml-jackson = "2.20.0"
com-flywaydb-flyway = "11.15.0"
com-github-tschuchortdev-kotlin-compile-testing = "1.6.0"
com-google-devtools-ksp = "2.3.0"
com-mapstruct = "1.6.3"
com-querydsl = "5.1.0"
com-squareup-kotlinpoet = "2.2.0"
com-squareup-okio = "3.16.2"
com-vanniktech-maven-publish = "0.34.0"
com-xuxueli-xxl-job = "3.2.0"
com-yomahub-liteflow = "2.15.1"
dev-langchain4j-community = "1.1.0-beta7"
group = "io.github.truenine"
intellij-platform = "2025.2.1"
intellij-platform-ide = "243"
intellij-platform-plugin-java = "21"
io-netty = "4.2.7.Final"
java = "17"
net-sf-sevenzipjbinding = "16.02-2.01"
nl-littlerobots-version-catalog-updat-gradle-plugin = "1.0.1"
org-apache-commons-exec = "1.5.0"
org-apache-groovy = "5.0.2"
org-apache-logging-log4j = "2.25.2"
org-assertj = "4.0.0-M1"
org-awaitility = "4.3.0"
org-babyfish-jimmer = "0.9.113"
org-gradle = "9.2.0-rc-3"
org-hibernate-orm = "7.2.0.CR1"
org-jetbrains-dokka = "2.1.0"
org-jetbrains-intellij-platform = "2.10.2"
org-jetbrains-kotlin = "2.3.0-Beta2"
org-jetbrains-kotlinx-coroutines = "1.10.2"
org-jetbrains-kotlinx-datetime = "0.7.1-0.6.x-compat"
org-jetbrains-kotlinx-io = "0.8.0"
org-jetbrains-kotlinx-serialization = "1.9.0"
org-junit-jupiter = "6.0.0"
org-liquibase = "5.0.1"
org-slf4j = "2.1.0-alpha1"
org-springframework-ai = "1.0.3"
org-springframework-batch = "5.2.4"
org-springframework-boot = "3.5.7"
org-springframework-cloud = "2025.0.0"
org-springframework-data = "3.5.5"
org-springframework-framework = "6.2.12"
org-springframework-integration = "6.5.3"
org-springframework-modulith = "2.0.0-M1"
org-springframework-security = "6.5.6"
org-testcontainers = "1.21.3"
org-testng = "7.11.0"
project = "0.0.46"

[libraries]
ch-qos-logback-logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "ch-qos-logback" }
cn-dev33-sa-token-redis-jackson = { module = "cn.dev33:sa-token-redis-jackson", version.ref = "cn-dev33-sa-token" }
cn-dev33-sa-token-redis-template = { module = "cn.dev33:sa-token-redis-template", version.ref = "cn-dev33-sa-token" }
cn-dev33-sa-token-spring-boot-starter = { module = "cn.dev33:sa-token-spring-boot-starter", version.ref = "cn-dev33-sa-token" }
cn-dev33-sa-token-spring-boot3-starter = { module = "cn.dev33:sa-token-spring-boot3-starter", version.ref = "cn-dev33-sa-token" }
cn-hutool-hutool-all = { module = "cn.hutool:hutool-all", version.ref = "cn-hutool" }
cn-hutool-hutool-captcha = { module = "cn.hutool:hutool-captcha", version.ref = "cn-hutool" }
cn-hutool-hutool-core = { module = "cn.hutool:hutool-core", version.ref = "cn-hutool" }
cn-hutool-hutool-crypto = { module = "cn.hutool:hutool-crypto", version.ref = "cn-hutool" }
cn-hutool-hutool-db = { module = "cn.hutool:hutool-db", version.ref = "cn-hutool" }
cn-idev-excel-fastexcel = "cn.idev.excel:fastexcel:1.3.0"
com-alibaba-cloud-spring-cloud-alibaba-dependencies = { module = "com.alibaba.cloud:spring-cloud-alibaba-dependencies", version.ref = "com-alibaba-cloud" }
com-alibaba-easyexcel = "com.alibaba:easyexcel:4.0.3"
com-aliyun-oss-aliyun-sdk-oss = "com.aliyun.oss:aliyun-sdk-oss:3.18.3"
com-auth0-java-jwt = "com.auth0:java-jwt:4.5.0"
org-jspecify-jspecify = "org.jspecify:jspecify:1.0.0"
com-baomidou-mybatis-plus-boot-starter = { module = "com.baomidou:mybatis-plus-boot-starter", version.ref = "com-baomidou-mybatis-plus" }
com-baomidou-mybatis-plus-boot-starter-test = { module = "com.baomidou:mybatis-plus-boot-starter-test", version.ref = "com-baomidou-mybatis-plus" }
com-baomidou-mybatis-plus-jsqlparser = { module = "com.baomidou:mybatis-plus-jsqlparser", version.ref = "com-baomidou-mybatis-plus" }
com-baomidou-mybatis-plus-spring-boot3-starter = { module = "com.baomidou:mybatis-plus-spring-boot3-starter", version.ref = "com-baomidou-mybatis-plus" }
com-diffplug-spotless-com-diffplug-spotless-gradle-plugin = { module = "com.diffplug.spotless:com.diffplug.spotless.gradle.plugin", version.ref = "com-diffplug-spotless" }
com-fasterxml-jackson-core-jackson-annotations = "com.fasterxml.jackson.core:jackson-annotations:3.0-rc5"
com-fasterxml-jackson-core-jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "com-fasterxml-jackson" }
com-fasterxml-jackson-core-jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "com-fasterxml-jackson" }
com-fasterxml-jackson-dataformat-jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "com-fasterxml-jackson" }
com-fasterxml-jackson-datatype-jackson-datatype-guava = { module = "com.fasterxml.jackson.datatype:jackson-datatype-guava", version.ref = "com-fasterxml-jackson" }
com-fasterxml-jackson-datatype-jackson-datatype-jdk8 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8", version.ref = "com-fasterxml-jackson" }
com-fasterxml-jackson-datatype-jackson-datatype-joda = { module = "com.fasterxml.jackson.datatype:jackson-datatype-joda", version.ref = "com-fasterxml-jackson" }
com-fasterxml-jackson-datatype-jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "com-fasterxml-jackson" }
com-fasterxml-jackson-module-jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "com-fasterxml-jackson" }
com-github-ben-manes-caffeine-caffeine = "com.github.ben-manes.caffeine:caffeine:3.2.3"
com-github-gavlyukovskiy-p6spy-spring-boot-starter = "com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.12.0"
com-github-haifengl-smile-math = "com.github.haifengl:smile-math:2.6.0"
com-github-junrar-junrar = "com.github.junrar:junrar:7.5.7"
com-github-magese-ik-analyzer = "com.github.magese:ik-analyzer:8.5.0"
com-github-tschuchortdev-kotlin-compile-testing = { module = "com.github.tschuchortdev:kotlin-compile-testing", version.ref = "com-github-tschuchortdev-kotlin-compile-testing" }
com-github-tschuchortdev-kotlin-compile-testing-ksp = { module = "com.github.tschuchortdev:kotlin-compile-testing-ksp", version.ref = "com-github-tschuchortdev-kotlin-compile-testing" }
com-github-ulisesbocchio-jasypt-spring-boot-starter = "com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5"
com-github-wechatpay-apiv3-wechatpay-java = "com.github.wechatpay-apiv3:wechatpay-java:0.2.17"
com-github-xiaoymin-knife4j-openapi3-jakarta-spring-boot-starter = "com.github.xiaoymin:knife4j-openapi3-jakarta-spring-boot-starter:4.5.0"
com-github-xiaoymin-knife4j-spring-boot-starter = "com.github.xiaoymin:knife4j-spring-boot-starter:3.0.3"
com-google-code-gson-gson = "com.google.code.gson:gson:2.13.2"
com-google-devtools-ksp-symbol-processing = { module = "com.google.devtools.ksp:symbol-processing", version.ref = "com-google-devtools-ksp" }
com-google-devtools-ksp-symbol-processing-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "com-google-devtools-ksp" }
com-google-guava-guava-jre = "com.google.guava:guava:33.5.0-jre"
com-h2database-h2 = "com.h2database:h2:2.4.240"
com-hikvision-ga-artemis-http-client = "com.hikvision.ga:artemis-http-client:1.1.3"
com-hikvision-ga-opensource = "com.hikvision.ga:opensource:0.0.3"
com-huaweicloud-esdk-obs-java = "com.huaweicloud:esdk-obs-java:3.25.7"
com-microsoft-playwright-playwright = "com.microsoft.playwright:playwright:1.56.0"
com-mysql-mysql-connector-j = "com.mysql:mysql-connector-j:9.5.0"
com-querydsl-querydsl-apt = { module = "com.querydsl:querydsl-apt", version.ref = "com-querydsl" }
com-querydsl-querydsl-core = { module = "com.querydsl:querydsl-core", version.ref = "com-querydsl" }
com-querydsl-querydsl-jpa = { module = "com.querydsl:querydsl-jpa", version.ref = "com-querydsl" }
com-squareup-javapoet = "com.squareup:javapoet:1.13.0"
com-squareup-kotlinpoet-jvm = { module = "com.squareup:kotlinpoet-jvm", version.ref = "com-squareup-kotlinpoet" }
com-squareup-kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "com-squareup-kotlinpoet" }
com-squareup-okhttp3-okhttp = "com.squareup.okhttp3:okhttp:5.2.1"
com-squareup-okio-okio = { module = "com.squareup.okio:okio", version.ref = "com-squareup-okio" }
com-squareup-okio-okio-jvm = { module = "com.squareup.okio:okio-jvm", version.ref = "com-squareup-okio" }
com-squareup-retrofit2-retrofit = "com.squareup.retrofit2:retrofit:3.0.0"
com-tencentcloudapi-tencentcloud-sdk-java-sms = "com.tencentcloudapi:tencentcloud-sdk-java-sms:3.1.1281"
com-vanniktech-maven-publish-com-vanniktech-maven-publish-gradle-plugin = { module = "com.vanniktech.maven.publish:com.vanniktech.maven.publish.gradle.plugin", version.ref = "com-vanniktech-maven-publish" }
com-volcengine-ve-tos-java-sdk = "com.volcengine:ve-tos-java-sdk:2.9.5"
com-xuxueli-xxl-job-core = { module = "com.xuxueli:xxl-job-core", version.ref = "com-xuxueli-xxl-job" }
com-yomahub-liteflow-spring-boot-starter = { module = "com.yomahub:liteflow-spring-boot-starter", version.ref = "com-yomahub-liteflow" }
dev-langchain4j-langchain4j = "dev.langchain4j:langchain4j:1.8.0"
dev-langchain4j-langchain4j-bom = "dev.langchain4j:langchain4j-bom:1.2.0"
dev-langchain4j-langchain4j-community-bom = { module = "dev.langchain4j:langchain4j-community-bom", version.ref = "dev-langchain4j-community" }
dev-langchain4j-langchain4j-hugging-face = { module = "dev.langchain4j:langchain4j-hugging-face", version.ref = "dev-langchain4j-community" }
dev-langchain4j-langchain4j-kotlin = { module = "dev.langchain4j:langchain4j-kotlin", version.ref = "dev-langchain4j-community" }
dev-langchain4j-langchain4j-mcp = { module = "dev.langchain4j:langchain4j-mcp", version.ref = "dev-langchain4j-community" }
dev-langchain4j-langchain4j-ollama = "dev.langchain4j:langchain4j-ollama:1.8.0"
dev-langchain4j-langchain4j-ollama-spring-boot-starter = { module = "dev.langchain4j:langchain4j-ollama-spring-boot-starter", version.ref = "dev-langchain4j-community" }
dev-langchain4j-langchain4j-pgvector = { module = "dev.langchain4j:langchain4j-pgvector", version.ref = "dev-langchain4j-community" }
dev-langchain4j-langchain4j-reactor = { module = "dev.langchain4j:langchain4j-reactor", version.ref = "dev-langchain4j-community" }
dev-langchain4j-langchain4j-spring-boot-starter = { module = "dev.langchain4j:langchain4j-spring-boot-starter", version.ref = "dev-langchain4j-community" }
dev-langchain4j-langchain4j-zhipu-ai = "dev.langchain4j:langchain4j-zhipu-ai:0.36.2"
io-github-bonigarcia-webdrivermanager = "io.github.bonigarcia:webdrivermanager:6.3.2"
io-github-truenine-composeserver-ai-langchain4j = { module = "io.github.truenine:composeserver-ai-langchain4j", version.ref = "project" }
io-github-truenine-composeserver-ai-shared = { module = "io.github.truenine:composeserver-ai-shared", version.ref = "project" }
io-github-truenine-composeserver-cacheable = { module = "io.github.truenine:composeserver-cacheable", version.ref = "project" }
io-github-truenine-composeserver-data-crawler = { module = "io.github.truenine:composeserver-data-crawler", version.ref = "project" }
io-github-truenine-composeserver-data-extract = { module = "io.github.truenine:composeserver-data-extract", version.ref = "project" }
io-github-truenine-composeserver-depend-http-exchange = { module = "io.github.truenine:composeserver-depend-http-exchange", version.ref = "project" }
io-github-truenine-composeserver-depend-jackson = { module = "io.github.truenine:composeserver-depend-jackson", version.ref = "project" }
io-github-truenine-composeserver-depend-paho = { module = "io.github.truenine:composeserver-depend-paho", version.ref = "project" }
io-github-truenine-composeserver-depend-servlet = { module = "io.github.truenine:composeserver-depend-servlet", version.ref = "project" }
io-github-truenine-composeserver-depend-springdoc-openapi = { module = "io.github.truenine:composeserver-depend-springdoc-openapi", version.ref = "project" }
io-github-truenine-composeserver-depend-xxl-job = { module = "io.github.truenine:composeserver-depend-xxl-job", version.ref = "project" }
io-github-truenine-composeserver-gradleplugin-composeserver = { module = "io.github.truenine:composeserver-gradleplugin-composeserver", version.ref = "project" }
io-github-truenine-composeserver-gradleplugin-dotenv = { module = "io.github.truenine:composeserver-gradleplugin-dotenv", version.ref = "project" }
io-github-truenine-composeserver-ksp-meta = { module = "io.github.truenine:composeserver-ksp-meta", version.ref = "project" }
io-github-truenine-composeserver-ksp-plugin = { module = "io.github.truenine:composeserver-ksp-plugin", version.ref = "project" }
io-github-truenine-composeserver-ksp-shared = { module = "io.github.truenine:composeserver-ksp-shared", version.ref = "project" }
io-github-truenine-composeserver-oss-aliyun-oss = { module = "io.github.truenine:composeserver-oss-aliyun-oss", version.ref = "project" }
io-github-truenine-composeserver-oss-huawei-obs = { module = "io.github.truenine:composeserver-oss-huawei-obs", version.ref = "project" }
io-github-truenine-composeserver-oss-minio = { module = "io.github.truenine:composeserver-oss-minio", version.ref = "project" }
io-github-truenine-composeserver-oss-shared = { module = "io.github.truenine:composeserver-oss-shared", version.ref = "project" }
io-github-truenine-composeserver-oss-volcengine-tos = { module = "io.github.truenine:composeserver-oss-volcengine-tos", version.ref = "project" }
io-github-truenine-composeserver-pay-shared = { module = "io.github.truenine:composeserver-pay-shared", version.ref = "project" }
io-github-truenine-composeserver-pay-wechat = { module = "io.github.truenine:composeserver-pay-wechat", version.ref = "project" }
io-github-truenine-composeserver-psdk-wxpa = { module = "io.github.truenine:composeserver-psdk-wxpa", version.ref = "project" }
io-github-truenine-composeserver-rds-crud = { module = "io.github.truenine:composeserver-rds-crud", version.ref = "project" }
io-github-truenine-composeserver-rds-flyway-migration-mysql8 = { module = "io.github.truenine:composeserver-rds-flyway-migration-mysql8", version.ref = "project" }
io-github-truenine-composeserver-rds-flyway-migration-postgresql = { module = "io.github.truenine:composeserver-rds-flyway-migration-postgresql", version.ref = "project" }
io-github-truenine-composeserver-rds-flyway-migration-shared = { module = "io.github.truenine:composeserver-rds-flyway-migration-shared", version.ref = "project" }
io-github-truenine-composeserver-rds-jimmer-ext-postgres = { module = "io.github.truenine:composeserver-rds-jimmer-ext-postgres", version.ref = "project" }
io-github-truenine-composeserver-rds-shared = { module = "io.github.truenine:composeserver-rds-shared", version.ref = "project" }
io-github-truenine-composeserver-security-crypto = { module = "io.github.truenine:composeserver-security-crypto", version.ref = "project" }
io-github-truenine-composeserver-security-oauth2 = { module = "io.github.truenine:composeserver-security-oauth2", version.ref = "project" }
io-github-truenine-composeserver-security-spring = { module = "io.github.truenine:composeserver-security-spring", version.ref = "project" }
io-github-truenine-composeserver-shared = { module = "io.github.truenine:composeserver-shared", version.ref = "project" }
io-github-truenine-composeserver-sms-tencent = { module = "io.github.truenine:composeserver-sms-tencent", version.ref = "project" }
io-github-truenine-composeserver-testtoolkit-shared = { module = "io.github.truenine:composeserver-testtoolkit-shared", version.ref = "project" }
io-github-truenine-composeserver-testtoolkit-springmvc = { module = "io.github.truenine:composeserver-testtoolkit-springmvc", version.ref = "project" }
io-github-truenine-composeserver-testtoolkit-testcontainers = { module = "io.github.truenine:composeserver-testtoolkit-testcontainers", version.ref = "project" }
io-jsonwebtoken-jjwt-api = "io.jsonwebtoken:jjwt-api:0.13.0"
io-minio-minio = "io.minio:minio:8.6.0"
io-mockk-mockk = "io.mockk:mockk:1.14.6"
io-netty-netty-handler = { module = "io.netty:netty-handler", version.ref = "io-netty" }
io-projectreactor-kotlin-reactor-kotlin-extensions = "io.projectreactor.kotlin:reactor-kotlin-extensions:1.3.0-RC2"
io-projectreactor-reactor-test = "io.projectreactor:reactor-test:3.8.0-M5"
io-spring-gradle-dependency-management-plugin = "io.spring.gradle:dependency-management-plugin:1.1.7"
io-swagger-core-v3-swagger-annotations-jakarta = "io.swagger.core.v3:swagger-annotations-jakarta:2.2.40"
jakarta-annotation-jakarta-annotation-api = "jakarta.annotation:jakarta.annotation-api:3.0.0"
jakarta-inject-jakarta-inject-api = "jakarta.inject:jakarta.inject-api:2.0.1"
jakarta-persistence-jakarta-persistence-api = "jakarta.persistence:jakarta.persistence-api:3.2.0"
jakarta-servlet-jakarta-servlet-api = "jakarta.servlet:jakarta.servlet-api:6.1.0"
jakarta-validation-jakarta-validation-api = "jakarta.validation:jakarta.validation-api:3.1.1"
mysql-mysql-connector-java = "mysql:mysql-connector-java:8.0.33"
net-bytebuddy-byte-buddy = "net.bytebuddy:byte-buddy:1.17.8"
net-sf-dozer-dozer = "net.sf.dozer:dozer:5.5.1"
net-sf-sevenzipjbinding-sevenzipjbinding = { module = "net.sf.sevenzipjbinding:sevenzipjbinding", version.ref = "net-sf-sevenzipjbinding" }
net-sf-sevenzipjbinding-sevenzipjbinding-all-platforms = { module = "net.sf.sevenzipjbinding:sevenzipjbinding-all-platforms", version.ref = "net-sf-sevenzipjbinding" }
net-sf-supercsv-super-csv = "net.sf.supercsv:super-csv:2.4.0"
nl-littlerobots-version-catalog-update-nl-littlerobots-version-catalog-update-gradle-plugin = { module = "nl.littlerobots.version-catalog-update:nl.littlerobots.version-catalog-update.gradle.plugin", version.ref = "nl-littlerobots-version-catalog-updat-gradle-plugin" }
ognl-ognl = "ognl:ognl:3.4.8"
org-apache-commons-commons-compress = "org.apache.commons:commons-compress:1.28.0"
org-apache-commons-commons-csv = "org.apache.commons:commons-csv:1.14.1"
org-apache-commons-commons-exec = { module = "org.apache.commons:commons-exec", version.ref = "org-apache-commons-exec" }
org-apache-commons-commons-pool2 = "org.apache.commons:commons-pool2:2.12.1"
org-apache-groovy = { module = "org.apache.groovy:groovy", version.ref = "org-apache-groovy" }
org-apache-groovy-bom = { module = "org.apache.groovy:groovy-bom", version.ref = "org-apache-groovy" }
org-apache-logging-log4j-log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "org-apache-logging-log4j" }
org-apache-logging-log4j-log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "org-apache-logging-log4j" }
org-assertj-assertj-core = { module = "org.assertj:assertj-core", version.ref = "org-assertj" }
org-awaitility-awaitility = { module = "org.awaitility:awaitility", version.ref = "org-awaitility" }
org-awaitility-awaitility-kotlin = { module = "org.awaitility:awaitility-kotlin", version.ref = "org-awaitility" }
org-babyfish-jimmer-jimmer-apt = { module = "org.babyfish.jimmer:jimmer-apt", version.ref = "org-babyfish-jimmer" }
org-babyfish-jimmer-jimmer-client = { module = "org.babyfish.jimmer:jimmer-client", version.ref = "org-babyfish-jimmer" }
org-babyfish-jimmer-jimmer-core = { module = "org.babyfish.jimmer:jimmer-core", version.ref = "org-babyfish-jimmer" }
org-babyfish-jimmer-jimmer-ksp = { module = "org.babyfish.jimmer:jimmer-ksp", version.ref = "org-babyfish-jimmer" }
org-babyfish-jimmer-jimmer-mapstruct-apt = { module = "org.babyfish.jimmer:jimmer-mapstruct-apt", version.ref = "org-babyfish-jimmer" }
org-babyfish-jimmer-jimmer-spring-boot-starter = { module = "org.babyfish.jimmer:jimmer-spring-boot-starter", version.ref = "org-babyfish-jimmer" }
org-babyfish-jimmer-jimmer-sql = { module = "org.babyfish.jimmer:jimmer-sql", version.ref = "org-babyfish-jimmer" }
org-babyfish-jimmer-jimmer-sql-kotlin = { module = "org.babyfish.jimmer:jimmer-sql-kotlin", version.ref = "org-babyfish-jimmer" }
org-bouncycastle-bcprov-jdk18on = "org.bouncycastle:bcprov-jdk18on:1.82"
org-casbin-casbin-spring-boot-starter = "org.casbin:casbin-spring-boot-starter:1.9.0"
org-casbin-casbin-spring-security-starter = "org.casbin:casbin-spring-security-starter:1.1.0"
org-casbin-jcasbin = "org.casbin:jcasbin:1.85.1"
org-eclipse-paho-client-mqttv3 = "org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5"
org-flywaydb-flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "com-flywaydb-flyway" }
org-flywaydb-flyway-database-postgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "com-flywaydb-flyway" }
org-flywaydb-flyway-mysql = { module = "org.flywaydb:flyway-mysql", version.ref = "com-flywaydb-flyway" }
org-freemarker-freemarker = "org.freemarker:freemarker:2.3.34"
org-hibernate-orm-hibernate-core = { module = "org.hibernate:hibernate-core", version.ref = "org-hibernate-orm" }
org-hsqldb-hsqldb = "org.hsqldb:hsqldb:2.7.4"
org-htmlunit-neko-htmlunit = "org.htmlunit:neko-htmlunit:4.17.0"
org-jetbrains-annotations = "org.jetbrains:annotations:26.0.2-1"
org-jetbrains-dokka-dokka-gradle-plugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "org-jetbrains-dokka" }
org-jetbrains-intellij-platform-gradle-plugin = { module = "org.jetbrains.intellij.platform:org.jetbrains.intellij.platform.gradle.plugin", version.ref = "org-jetbrains-intellij-platform" }
org-jetbrains-kotlin-jvm-org-jetbrains-kotlin-jvm-gradle-plugin = { module = "org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-kapt-org-jetbrains-kotlin-kapt-gradle-plugin = { module = "org.jetbrains.kotlin.kapt:org.jetbrains.kotlin.kapt.gradle.plugin", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-kotlin-annotaiton-processing-embedable = { module = "org.jetbrains.kotlin:kotlin-annotation-processing-embeddable", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-kotlin-compiler-embeddable = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-kotlin-gradle-plugin-api = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin-api", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-kotlin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-kotlin-test-testng = { module = "org.jetbrains.kotlin:kotlin-test-testng", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-multiplatform-org-jetbrains-kotlin-multiplatform-gradle-plugin = { module = "org.jetbrains.kotlin.multiplatform:org.jetbrains.kotlin.multiplatform.gradle.plugin", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-plugin-jpa-org-jetbrains-kotlin-plugin-jpa-gradle-plugin = { module = "org.jetbrains.kotlin.plugin.jpa:org.jetbrains.kotlin.plugin.jpa.gradle.plugin", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-plugin-lombok-org-jetbrains-kotlin-plugin-lombok-gradle-plugin = { module = "org.jetbrains.kotlin.plugin.lombok:org.jetbrains.kotlin.plugin.lombok.gradle.plugin", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-plugin-spring-org-jetbrains-kotlin-plugin-spring-gradle-plugin = { module = "org.jetbrains.kotlin.plugin.spring:org.jetbrains.kotlin.plugin.spring.gradle.plugin", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlinx-kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "org-jetbrains-kotlinx-coroutines" }
org-jetbrains-kotlinx-kotlinx-coroutines-guava = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-guava", version.ref = "org-jetbrains-kotlinx-coroutines" }
org-jetbrains-kotlinx-kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "org-jetbrains-kotlinx-coroutines" }
org-jetbrains-kotlinx-kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "org-jetbrains-kotlinx-coroutines" }
org-jetbrains-kotlinx-kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "org-jetbrains-kotlinx-datetime" }
org-jetbrains-kotlinx-kotlinx-datetime-jvm = { module = "org.jetbrains.kotlinx:kotlinx-datetime-jvm", version.ref = "org-jetbrains-kotlinx-datetime" }
org-jetbrains-kotlinx-kotlinx-io-core = { module = "org.jetbrains.kotlinx:kotlinx-io-core", version.ref = "org-jetbrains-kotlinx-io" }
org-jetbrains-kotlinx-kotlinx-io-core-jvm = { module = "org.jetbrains.kotlinx:kotlinx-io-core-jvm", version.ref = "org-jetbrains-kotlinx-io" }
org-jetbrains-kotlinx-kotlinx-serialization-bom = { module = "org.jetbrains.kotlinx:kotlinx-serialization-bom", version.ref = "org-jetbrains-kotlinx-serialization" }
org-jetbrains-kotlinx-kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "org-jetbrains-kotlinx-serialization" }
org-jsoup-jsoup = "org.jsoup:jsoup:1.21.2"
org-junit-jupiter-junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "org-junit-jupiter" }
org-junit-jupiter-junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "org-junit-jupiter" }
org-junit-jupiter-junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "org-junit-jupiter" }
org-junit-platform-junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "org-junit-jupiter" }
org-junit-platform-junit-platform-suite = { module = "org.junit.platform:junit-platform-suite", version.ref = "org-junit-jupiter" }
org-junit-vintage-junit-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "org-junit-jupiter" }
org-lionsoul-ip2region = "org.lionsoul:ip2region:3.1.1"
org-liquibase-liquibase-core = { module = "org.liquibase:liquibase-core", version.ref = "org-liquibase" }
org-mapstruct-mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "com-mapstruct" }
org-mapstruct-mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "com-mapstruct" }
org-owasp-antisamy-antisamy = "org.owasp.antisamy:antisamy:1.7.8"
org-postgresql-postgresql = "org.postgresql:postgresql:42.7.8"
org-projectlombok-lombok = "org.projectlombok:lombok:1.18.42"
org-seleniumhq-selenium-selenium-java = "org.seleniumhq.selenium:selenium-java:4.38.0"
org-skyscreamer-jsonassert = "org.skyscreamer:jsonassert:2.0-rc1"
org-slf4j-slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "org-slf4j" }
org-springdoc-springdoc-openapi-starter-webmvc-ui = "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13"
org-springframework-ai-spring-ai-bom = { module = "org.springframework.ai:spring-ai-bom", version.ref = "org-springframework-ai" }
org-springframework-ai-spring-ai-spring-boot-docker-compose = { module = "org.springframework.ai:spring-ai-spring-boot-docker-compose", version.ref = "org-springframework-ai" }
org-springframework-batch-spring-batch-test = { module = "org.springframework.batch:spring-batch-test", version.ref = "org-springframework-batch" }
org-springframework-boot-spring-boot = { module = "org.springframework.boot:spring-boot", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-dependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-docker-compose = { module = "org.springframework.boot:spring-boot-docker-compose", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-gradle-plugin = { module = "org.springframework.boot:spring-boot-gradle-plugin", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-batch = { module = "org.springframework.boot:spring-boot-starter-batch", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-data-jdbc = { module = "org.springframework.boot:spring-boot-starter-data-jdbc", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-data-redis-reactive = { module = "org.springframework.boot:spring-boot-starter-data-redis-reactive", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-jdbc = { module = "org.springframework.boot:spring-boot-starter-jdbc", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-json = { module = "org.springframework.boot:spring-boot-starter-json", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-logging = { module = "org.springframework.boot:spring-boot-starter-logging", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-tomcat = { module = "org.springframework.boot:spring-boot-starter-tomcat", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-undertow = { module = "org.springframework.boot:spring-boot-starter-undertow", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-starter-websocket = { module = "org.springframework.boot:spring-boot-starter-websocket", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-test = { module = "org.springframework.boot:spring-boot-test", version.ref = "org-springframework-boot" }
org-springframework-boot-spring-boot-test-autoconfigure = { module = "org.springframework.boot:spring-boot-test-autoconfigure", version.ref = "org-springframework-boot" }
org-springframework-cloud-spring-cloud-dependencies = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "org-springframework-cloud" }
org-springframework-cloud-spring-cloud-starter-bootstrap = "org.springframework.cloud:spring-cloud-starter-bootstrap:5.0.0-M1"
org-springframework-data-spring-data-commons = { module = "org.springframework.data:spring-data-commons", version.ref = "org-springframework-data" }
org-springframework-data-spring-data-jpa = { module = "org.springframework.data:spring-data-jpa", version.ref = "org-springframework-data" }
org-springframework-integration-spring-integration-core = { module = "org.springframework.integration:spring-integration-core", version.ref = "org-springframework-integration" }
org-springframework-integration-spring-integration-mqtt = { module = "org.springframework.integration:spring-integration-mqtt", version.ref = "org-springframework-integration" }
org-springframework-modulith-spring-modulith-bom = { module = "org.springframework.modulith:spring-modulith-bom", version.ref = "org-springframework-modulith" }
org-springframework-modulith-spring-modulith-core = { module = "org.springframework.modulith:spring-modulith-core", version.ref = "org-springframework-modulith" }
org-springframework-modulith-spring-modulith-starter-jpa = { module = "org.springframework.modulith:spring-modulith-starter-jpa", version.ref = "org-springframework-modulith" }
org-springframework-modulith-spring-modulith-starter-test = { module = "org.springframework.modulith:spring-modulith-starter-test", version.ref = "org-springframework-modulith" }
org-springframework-security-spring-security-core = { module = "org.springframework.security:spring-security-core", version.ref = "org-springframework-security" }
org-springframework-security-spring-security-crypto = { module = "org.springframework.security:spring-security-crypto", version.ref = "org-springframework-security" }
org-springframework-security-spring-security-test = { module = "org.springframework.security:spring-security-test", version.ref = "org-springframework-security" }
org-springframework-spring-context = { module = "org.springframework:spring-context", version.ref = "org-springframework-framework" }
org-springframework-spring-core = { module = "org.springframework:spring-core", version.ref = "org-springframework-framework" }
org-springframework-spring-jdbc = { module = "org.springframework:spring-jdbc", version.ref = "org-springframework-framework" }
org-springframework-spring-test = { module = "org.springframework:spring-test", version.ref = "org-springframework-framework" }
org-springframework-spring-tx = { module = "org.springframework:spring-tx", version.ref = "org-springframework-framework" }
org-springframework-spring-web = { module = "org.springframework:spring-web", version.ref = "org-springframework-framework" }
org-springframework-spring-webflux = { module = "org.springframework:spring-webflux", version.ref = "org-springframework-framework" }
org-springframework-spring-webmvc = { module = "org.springframework:spring-webmvc", version.ref = "org-springframework-framework" }
org-testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "org-testcontainers" }
org-testcontainers-minio = { module = "org.testcontainers:minio", version.ref = "org-testcontainers" }
org-testcontainers-mysql = { module = "org.testcontainers:mysql", version.ref = "org-testcontainers" }
org-testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "org-testcontainers" }
org-testcontainers-testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "org-testcontainers" }
org-testcontainers-testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version.ref = "org-testcontainers" }
org-testng-testng = { module = "org.testng:testng", version.ref = "org-testng" }
org-xerial-sqlite-jdbc = "org.xerial:sqlite-jdbc:3.50.3.0"
p6spy-p6spy = "p6spy:p6spy:3.9.1"

[plugins]
com-diffplug-spotless = { id = "com.diffplug.spotless", version.ref = "com-diffplug-spotless" }
com-github-ben-manes-versions = "com.github.ben-manes.versions:0.53.0"
com-google-devtools-ksp = { id = "com.google.devtools.ksp", version.ref = "com-google-devtools-ksp" }
com-vanniktech-maven-publish = { id = "com.vanniktech.maven.publish", version.ref = "com-vanniktech-maven-publish" }
io-github-truenine-composeserver-gradleplugin-composeserver = { id = "io.github.truenine.composeserver.composeserver", version.ref = "project" }
io-github-truenine-composeserver-gradleplugin-dotenv = { id = "io.github.truenine.composeserver.dotenv", version.ref = "project" }
io-spring-dependency-management = "io.spring.dependency-management:1.1.7"
nl-littlerobots-version-catalog-update = { id = "nl.littlerobots.version-catalog-update", version.ref = "nl-littlerobots-version-catalog-updat-gradle-plugin" }
org-asciidoctor-jvm-convert = "org.asciidoctor.jvm.convert:4.0.4"
org-graalvm-buildtools-native = "org.graalvm.buildtools.native:0.10.6"
org-gradle-toolchains-foojay-resolver-convention = "org.gradle.toolchains.foojay-resolver-convention:1.0.0"
org-hibernate-orm = { id = "org.hibernate.orm", version.ref = "org-hibernate-orm" }
org-jetbrains-dokka = { id = "org.jetbrains.dokka", version.ref = "org-jetbrains-dokka" }
org-jetbrains-intellij-platform = { id = "org.jetbrains.intellij.platform", version.ref = "org-jetbrains-intellij-platform" }
org-jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-plugin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-plugin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-plugin-lombok = { id = "org.jetbrains.kotlin.plugin.lombok", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-plugin-noarg = { id = "org.jetbrains.kotlin.plugin.noarg", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-plugin-power-assert = { id = "org.jetbrains.kotlin.plugin.power-assert", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-plugin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "org-jetbrains-kotlin" }
org-springframework-boot = { id = "org.springframework.boot", version.ref = "org-springframework-boot" }
tech-argonariod-gradle-plugin-jimmer = "tech.argonariod.gradle-plugin-jimmer:1.2.0"
